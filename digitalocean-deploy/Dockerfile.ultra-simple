# Ultra-simple build for production (no canvas)
FROM node:20-alpine AS builder

# Install minimal build dependencies
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    && rm -rf /var/cache/apk/*

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./
COPY vite.config.js ./
COPY tailwind.config.js ./

# Create a modified package.json without canvas
RUN npm pkg delete dependencies.canvas

# Install dependencies without canvas
RUN npm ci --ignore-scripts

# Copy source code
COPY . .

# Build the React app
RUN npm run build

# Production stage
FROM node:20-alpine AS production

# Install minimal system dependencies
RUN apk add --no-cache \
    python3 \
    sqlite \
    && rm -rf /var/cache/apk/*

# Create app user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nodejs -u 1001

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Remove canvas from production dependencies
RUN npm pkg delete dependencies.canvas

# Install production dependencies only
RUN npm ci --only=production --ignore-scripts && npm cache clean --force

# Copy built application from builder stage
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/server ./server
COPY --from=builder /app/contracts ./contracts
COPY --from=builder /app/public ./public
COPY --from=builder /app/scripts ./scripts

# Copy environment template
COPY env-template.txt ./

# Create necessary directories
RUN mkdir -p /app/uploads /app/logs /app/database

# Set ownership
RUN chown -R nodejs:nodejs /app

# Switch to non-root user
USER nodejs

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"

# Start the application
CMD ["node", "server/server.js"]
